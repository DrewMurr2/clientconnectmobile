{"version":3,"sources":["/Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings-page/settings-page.component.html","/Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings-page/settings-page.component.scss","/Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings-page/settings-page.component.ts","/Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings-routing.module.ts","/Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings.module.ts","/Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings/settings.component.html","/Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings/settings.component.scss","/Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings/settings.component.ts"],"names":[],"mappings":"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","file":"settings.module.chunk.js","sourcesContent":["module.exports = \"\\n<div class=\\\"col-sm-12\\\" style=\\\"margin-top:10px;\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings-page/settings-page.component.html\n// module id = ../../../../../src/app/settings/settings-page/settings-page.component.html\n// module chunks = settings.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings-page/settings-page.component.scss\n// module id = ../../../../../src/app/settings/settings-page/settings-page.component.scss\n// module chunks = settings.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-page',\n  templateUrl: './settings-page.component.html',\n  styleUrls: ['./settings-page.component.scss']\n})\nexport class SettingsPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings-page/settings-page.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsPageComponent } from './settings-page/settings-page.component';\nimport { SettingsComponent } from './settings/settings.component';\n\nconst routes: Routes = [\n    {path: '', component: SettingsPageComponent, children: [\n            {path: '', component: SettingsComponent}\n        ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsComponent } from './settings/settings.component';\nimport { SettingsPageComponent } from './settings-page/settings-page.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n      SharedModule\n  ],\n  declarations: [SettingsComponent, SettingsPageComponent]\n})\nexport class SettingsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings.module.ts","module.exports = \"<h3><mat-icon>build</mat-icon> Settings\\n\\n<mat-progress-bar [style.opacity]=\\\"processing?1:0\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</h3>\\n<form [formGroup]=\\\"formGroup\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <mat-card>\\n        <mat-card-content>\\n          <mat-form-field>\\n            <mat-select\\n                    formControlName=\\\"defaultAccountNumber\\\"\\n                    placeholder=\\\"Select default number\\\">\\n              <mat-option\\n\\n                      *ngFor=\\\"let number of numbers\\\" [value]=\\\"number\\\">\\n                {{ number }}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-sm-12 text-right\\\">\\n              <button\\n                      (click)=\\\"save('defaultAccountNumber')\\\"\\n                      [disabled]=\\\"!formGroup.value.defaultAccountNumber || processing\\\" mat-raised-button=\\\"\\\" color=\\\"primary\\\">Save</button>\\n            </div>\\n\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n\\n\\n    <div class=\\\"col-sm-4\\\">\\n      <mat-card>\\n        <mat-card-content>\\n          <mat-form-field>\\n            <input formControlName=\\\"mobile\\\" matInput placeholder=\\\"Mobile number\\\" value=\\\"\\\">\\n          </mat-form-field>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-sm-12 text-right\\\">\\n              <button\\n                      (click)=\\\"save('mobile')\\\"\\n                      [disabled]=\\\"!formGroup.value.mobile || processing\\\" mat-raised-button=\\\"\\\" color=\\\"primary\\\">Save</button>\\n            </div>\\n\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n\\n\\n    <div class=\\\"col-sm-4\\\" [formGroup]=\\\"formGroup.controls.passwords\\\">\\n      <mat-card>\\n        <mat-card-content>\\n\\n          <strong style=\\\"display:block; margin-bottom:13px;\\\">Change Password: </strong>\\n\\n          <mat-form-field>\\n            <input type=\\\"password\\\" formControlName=\\\"oldPassword\\\"  matInput placeholder=\\\"Old Password\\\" value=\\\"\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <input type=\\\"password\\\" formControlName=\\\"password\\\" matInput placeholder=\\\"Password\\\" value=\\\"\\\">\\n          </mat-form-field>\\n\\n          <mat-form-field>\\n            <input type=\\\"password\\\" formControlName=\\\"confPassword\\\" matInput placeholder=\\\"Confirm Password\\\" value=\\\"\\\">\\n          </mat-form-field>\\n\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-sm-12 text-right\\\">\\n              <button\\n                      (click)=\\\"save('passwords')\\\"\\n                      [disabled]=\\\"!formGroup.controls.passwords.valid || processing\\\" mat-raised-button=\\\"\\\" color=\\\"primary\\\">Save</button>\\n            </div>\\n\\n          </div>\\n\\n\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n\\n  </div>\\n\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings/settings.component.html\n// module id = ../../../../../src/app/settings/settings/settings.component.html\n// module chunks = settings.module","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h3 {\\n  border-bottom: 1px solid #CCC;\\n  padding-bottom: 12px;\\n  position: relative; }\\n\\nmat-progress-bar {\\n  position: absolute;\\n  bottom: 0px;\\n  opacity: 0; }\\n\\nmat-form-field {\\n  width: 100%; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings/settings.component.scss\n// module id = ../../../../../src/app/settings/settings/settings.component.scss\n// module chunks = settings.module","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../shared/services/user.service';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../../shared/services/api.service';\nimport { GeneralService } from '../../shared/services/general.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  numbers;\n  formGroup: FormGroup;\n  processing = false;\n\n  constructor(\n      private userService: UserService,\n      private fb: FormBuilder,\n      private apiService: ApiService,\n      private generalService: GeneralService\n  ) { }\n\n  ngOnInit() {\n\n    this.numbers = this.userService.user.numbers;\n    this.setupForm();\n  }\n\n  setupForm(){\n    const formControls: any = {};\n    formControls.defaultAccountNumber = [this.userService.user.defaultAccountNumber, Validators.required];\n    formControls.mobile = ['', Validators.required];\n    formControls.passwords = this.fb.group({\n        oldPassword: ['', Validators.required],\n        password: ['', Validators.required],\n        confPassword: ['', Validators.required]\n    }, {validator: this.arePasswordEqual});\n\n    this.formGroup = this.fb.group(formControls);\n\n    setTimeout(()=>{\n        this.formGroup.patchValue({defaultAccountNumber: this.userService.user.defaultAccountNumber, mobile: this.userService.user.mobile});\n        this.formGroup.updateValueAndValidity();\n    }, 100);\n\n\n\n  }\n\n    arePasswordEqual(AC: AbstractControl){\n\n    console.log('controlllll');\n    console.log(AC);\n        let password = AC.get('password').value; // to get value in input tag\n        let confirmPassword = AC.get('confPassword').value; // to get value in input tag\n        if(password != confirmPassword) {\n            console.log('false');\n            AC.get('confPassword').setErrors( {MatchPassword: true} )\n        } else {\n            console.log('true');\n            return null\n        }\n\n    }\n\n  save(controlName){\n    this.processing = true;\n    const body: any = {};\n    if(typeof this.formGroup.controls[controlName].value == 'object'){\n        body[controlName] = JSON.stringify(this.formGroup.controls[controlName].value);\n    }else{\n        body[controlName] = this.formGroup.controls[controlName].value;\n    }\n    this.apiService.call('/api/settings/save', body).subscribe((response: any) => {\n\n        this.processing = false;\n      if(response.success == true) {\n\n        // update values user session\n          this.userService.user.defaultAccountNumber = this.formGroup.value.defaultAccountNumber;\n          this.userService.user.mobile = this.formGroup.value.mobile;\n          window.localStorage.setItem('user', JSON.stringify(this.userService.user));\n\n        this.generalService.showNotification('Settings has been saved successfully.', 'Okay');\n      }\n    }, ()=>{\n      this.processing = false;\n    });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/Work/Web/clientconnect/Client-Connect-Dashboard/src/app/settings/settings/settings.component.ts"],"sourceRoot":"webpack:///"}